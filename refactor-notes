History -> Router
Router takes a history
context.router contains everything
context.router.subscribe()
context.router.getState()
Match shadows context.router
  returns parent `match` in `getState()` for relativity
redux integration remains the same, use a history enhancer, pass it in


<XRouter> makes a history
  <Router> listens to a history
    <StaticRouter> parses/stringifies locations, provides context (and location subscriptions)
      <Match> listens to location changes, matches locations, provides router.match context for nested match/links
        <Link> calls imperative methods on context.router to transition
        <Location> calls imperative methods on context.router to transition


Match/Miss

- Match
  - cWM increases match count w/ parent match
  - subscribes to locations, sets state
  - before setting state, in/decreases match count w/ parent match
- Miss
  - subscribes to locations, sets state
  - checks match count in render

know if all descendant matches were partial
